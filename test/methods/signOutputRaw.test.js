import assert from 'assert';
import signOutputRaw from '../../src/methods/signOutputRaw';

const transaction = {
  inputs: [
    {
      witness: [],
      transactionHash: Buffer.from([70,39,141,144,79,74,49,187,180,137,254,94,226,128,254,204,111,204,170,130,183,100,50,4,164,195,204,129,213,197,6,217]),
      index: 0,
      signatureScript: Buffer.from([]),
      sequence: 2148824378
    }
  ],
  outputs: [
    {
      value: "90950",
      pkScript: Buffer.from([0,20,224,142,19,152,168,18,148,93,199,111,254,109,175,225,53,244,74,224,50,14])
    }
  ],
  version: 2,
  lockTime: 543013410
};
  
const signDescriptor = {
  keyDescriptor: {
    keyLocator: {
      keyFamily: 0,
      index: 1
    },
    publicKey: Buffer.from([4,129,84,205,229,197,35,59,5,124,28,158,195,140,150,204,40,244,155,49,207,216,14,1,58,90,253,149,135,120,79,204,222,57,72,213,86,206,85,217,242,189,49,30,209,37,140,203,250,34,7,8,32,142,255,153,241,244,66,174,48,6,167,83,248])
  },
  singleTweak: Buffer.from([]),
  doubleTweak: Buffer.from([]),
  witnessScript: Buffer.from([82,33,2,129,84,205,229,197,35,59,5,124,28,158,195,140,150,204,40,244,155,49,207,216,14,1,58,90,253,149,135,120,79,204,222,33,3,150,140,177,224,118,188,172,224,72,66,158,36,77,205,185,111,113,242,244,24,46,104,77,111,221,227,99,92,90,102,102,67,82,174]),
  output: {
    value: "100000",
    pkScript: Buffer.from([0,32,69,51,230,188,97,162,155,87,136,7,185,11,195,131,22,57,227,101,148,29,133,251,196,33,120,163,244,19,241,158,181,68])
  },
  hashType: 1,
  sigHashes: {
    hashPrevOuts: Buffer.from([137,187,54,180,165,71,207,120,17,37,134,170,67,237,20,249,37,94,254,101,20,43,61,187,195,152,8,122,64,127,236,45]),
    hashSequence: Buffer.from([26,96,248,33,14,250,235,181,56,220,146,111,205,246,8,237,98,114,128,124,232,172,237,126,86,115,231,252,106,59,54,150]),
    hashOutputs: Buffer.from([137,141,130,122,166,105,165,32,126,96,176,88,153,128,53,132,41,123,235,200,43,17,253,76,46,244,134,36,36,3,151,222])
  },
  inputIndex: 0
};

describe('methods/signOutputRaw.js', () => {
  describe('signOutputRaw()', () => {
    it('returns a signature', (done) => {
      const request = {
        transaction,
        signDescriptor
      };

      const expectedSignature = Buffer.from([48,69,2,33,0,232,142,7,218,174,58,123,232,4,26,158,20,109,20,222,166,138,131,160,13,167,181,200,236,68,0,44,134,52,181,197,66,2,32,94,9,216,23,113,92,205,60,117,101,193,11,158,158,33,155,226,185,189,211,209,104,111,60,65,80,232,1,214,234,225,36]);

      signOutputRaw({ request }, (error, response) => {
        assert(response.signature.equals(expectedSignature));
        done();
      });
    });
  });
});
